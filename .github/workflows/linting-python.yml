name: Python CI

on: [push]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
      fail-fast: false
    name: Python ${{ matrix.python-version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run pytest
      run: |
        if [ -d "tests" ] || find . -name "test_*.py" -print -quit | grep -q .; then
          pytest -v
        else
          echo "No tests found - skipping pytest"
        fi

  code-quality:
    runs-on: ubuntu-latest
    needs: lint-and-test
    name: Code Quality Checks
    if: always()

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install quality tools
      run: |
        pip install black isort mypy bandit safety

    - name: Run quality checks
      run: |
        set +e

        echo "=== Black ==="
        black --check . || true

        echo "\n=== isort ==="
        isort --check-only . || true

        echo "\n=== Mypy ==="
        mypy . || true

        echo "\n=== Bandit ==="
        bandit -r . || true

        echo "\n=== Safety ==="
        safety check || true
